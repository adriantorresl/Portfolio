add_shadow(
ray_shade(
dem_matrix,
sunaltitude = 30,
sunangle = 315,
zscale = 10
),
max_darken = 0.3
) %>%
add_shadow(
ambient_shade(dem_matrix, zscale = 10),
max_darken = 0.3
) %>%
plot_3d(
dem_matrix,
zscale = 10,
water = FALSE,
shadowdepth = -50,
windowsize = c(1200, 800),
background = "white",
theta = 230,
phi = 35,
zoom = 0.6,
fov = 60
)
# Añadir los ríos
render_path(
grosor,
extent = dem_amm,
color = "blue",
width = grosor$width/2,  # Reducir el grosor para mejor visualización
altitude = "relative",
zscale = 10,
clear_previous = FALSE
)
# Añadir los ríos
render_path(
grosor,
extent = dem_amm,
color = "blue",
width = grosor$ORD_FLOW,  # Reducir el grosor para mejor visualización
altitude = "relative",
zscale = 10,
clear_previous = FALSE
)
# Añadir los edificios (opcional, puede ser intensivo computacionalmente)
render_polygons(
edificios_sf,
extent = dem_amm,
color = "#555555",
altitude = "relative",
height = 10,
zscale = 10,
clear_previous = FALSE
)
# Añadir los ríos
render_path(
grosor,
extent = dem_amm,
color = "blue",
altitude = "relative",
zscale = 10,
clear_previous = FALSE
)
# Añadir los edificios (opcional, puede ser intensivo computacionalmente)
render_polygons(
edificios_sf,
extent = dem_amm,
color = "#555555",
height = 10,
clear_previous = FALSE
)
# Añadir título
render_label(
dem_matrix,
text = "Riesgo de Inundación - Área Metropolitana de Monterrey",
x = 0.5,
y = 0.95,
z = 1000,
zscale = 10,
relativez = FALSE,
color = "black",
textsize = 2,
linewidth = 2
)
# Añadir título
render_label(
dem_matrix,
text = "Riesgo de Inundación - Área Metropolitana de Monterrey",
x = 0.5,
y = 0.95,
z = 1000,
zscale = 10,
relativez = FALSE,
textsize = 2,
linewidth = 2
)
# Añadir elementos del mapa
render_scalebar(
limits = c(0, 5, 10),
label_unit = "km",
position = "bottomright",
y = 50,
z = 500,
zscale = 10
)
render_compass(
position = "topright",
z = 1000,
compass_radius = 100,
zscale = 10
)
riesgo_sf <- terra::as.polygons(riesgo_combinado, dissolve = TRUE)
riesgo_sf <- sf::st_as_sf(riesgo_sf)
# Configurar tmap en modo de visualización interactiva
tmap_mode("view")
# Crear el mapa
mapa_riesgo <- tm_shape(riesgo_sf) +
tm_fill(
col = "layer", # Columna con los valores de riesgo
palette = "-YlOrRd", # Paleta de colores invertida (más rojo = más riesgo)
title = "Riesgo de Inundación",
style = "cont", # Escala continua
alpha = 0.8
) +
tm_borders(col = "black", lwd = 0.5) + # Bordes de las zonas de riesgo
tm_shape(area_metropolitana_sf) +
tm_borders(col = "blue", lwd = 1.5, lty = "dashed") + # Bordes del área metropolitana
tm_layout(
title = "Mapa de Riesgo de Inundación - AMM",
title.size = 1.5,
legend.outside = TRUE,
legend.outside.position = "right",
frame = FALSE
) +
tm_scale_bar(position = c("left", "bottom")) + # Barra de escala
tm_compass(position = c("right", "top")) # Brújula
# Mostrar el mapa
mapa_riesgo
# Crear el mapa
# Crear el mapa estilizado
mapa_riesgo <- tm_shape(riesgo_sf) +
tm_fill(
col = "layer", # Columna con los valores de riesgo
tm_scale_continuous(values = "-YlOrRd"), # Paleta de colores invertida
fill.legend = tm_legend(title = "Riesgo de Inundación"),
fill_alpha = 0.8 # Transparencia
) +
tm_borders(col = "black", lwd = 0.5) + # Bordes de las zonas de riesgo
tm_shape(area_metropolitana_sf) +
tm_borders(col = "blue", lwd = 1.5, lty = "dashed") + # Bordes del área metropolitana
tm_title("Mapa de Riesgo de Inundación - AMM") +
tm_scalebar(position = c("left", "bottom")) + # Barra de escala
tm_compass(position = c("right", "top")) # Brújula
# Mostrar el mapa
mapa_riesgo
# Configurar tmap en modo de visualización interactiva
tmap_mode("view")
# Crear el mapa
# Crear el mapa estilizado
mapa_riesgo <- tm_shape(riesgo_sf) +
tm_fill(
col = "layer", # Columna con los valores de riesgo
tm_scale_continuous(values = "-YlOrRd"), # Paleta de colores invertida
fill.legend = tm_legend(title = "Riesgo de Inundación"),
fill_alpha = 0.8 # Transparencia
) +
tm_borders(col = "black", lwd = 0.5) + # Bordes de las zonas de riesgo
tm_shape(area_metropolitana_sf) +
tm_borders(col = "blue", lwd = 1.5, lty = "dashed") + # Bordes del área metropolitana
tm_title("Mapa de Riesgo de Inundación - AMM") +
tm_scalebar(position = c("left", "bottom")) + # Barra de escala
tm_compass(position = c("right", "top")) # Brújula
# Mostrar el mapa
mapa_riesgo
#ACUMULACIÓN DE FLUJO
accum <- terra::flowAccumulation(flowdir)
#NORMALIZAR
accum_norm <- (accum - minmax(accum)[1]) / (minmax(accum)[2] - minmax(accum)[1])
accum_norm
plot(accum_norm)
#CALCULAR EL RIESGO COMBINANDO AMBOS FACTORES
riesgo_combinado <- accum_norm * cuencas_ras
plot(riesgo_combinado)
riesgo_combinado
#OPCION 1 DE DEEPSEEK
# Crear mapa de riesgo con escala de colores
palette <- colorRampPalette(c("blue", "red"))(100)
riesgo_raster <- riesgo_combinado * 100  # Ajustar valores para mejor visualización
# Visualización 3D
dem_matrix |>
rayshader::height_shade(texture = palette) |>
rayshader::add_overlay(
rayshader::raster_to_matrix(riesgo_raster),
alphalayer = 0.5,  # Transparencia
colorscale = palette
) |>
rayshader::plot_3d(
dem_matrix,
zscale = 10,       # Ajustar según la elevación
windowsize = c(1000, 800),
water = FALSE
)
# Visualización 3D
# Crear un overlay de colores para el riesgo
riesgo_overlay <- rayshader::height_shade(
rayshader::raster_to_matrix(riesgo_raster),
texture = palette
)
# Generar el mapa 3D con rayshader
dem_matrix |>
rayshader::height_shade(texture = palette) |>
rayshader::add_overlay(
overlay = riesgo_overlay, # Overlay generado previamente
alphalayer = 0.5          # Transparencia
) |>
rayshader::plot_3d(
dem_matrix,
zscale = 10,              # Ajustar según la elevación
windowsize = c(1000, 800),
water = FALSE
)
#OPCION 2 DE DEEPSEEK (VISUALIZACION 2D)
# Convertir riesgo a raster y normalizar
riesgo_raster <- riesgo_combinado / max(riesgo_combinado[], na.rm = TRUE)
# Mapa base con relieve suavizado
tm_shape(dem_amm) +
tm_raster(style = "cont", palette = "-Greys", n = 10, alpha = 0.3) +
# Mapa de riesgo (calor)
tm_shape(riesgo_raster) +
tm_raster(
palette = "YlOrBr",
style = "fisher",
title = "Riesgo (0-1)",
alpha = 0.7
) +
# Curvas de nivel (para contexto topográfico)
tm_shape(dem_amm) +
tm_contour(
col = "black",
breaks = seq(0, 3000, by = 100),
lwd = 0.3
) +
# Ríos (grosor proporcional a ORD_FLOW)
tm_shape(grosor) +
tm_lines(
col = "blue",
lwd = "width",
scale = 5,
legend.lwd.show = FALSE
) +
# Ajustes finales
tm_layout(
legend.position = c("right", "top"),
frame = FALSE,
bg.color = "white"
)
curvas_nivel <- terra::as.contour(
dem_amm,
levels = seq(0, 3000, by = 100)
) |>
st_as_sf()
# Mapa base con relieve suavizado
tm_shape(riesgo_combinado) +
tm_raster(palette = "YlOrBr", alpha = 0.7, title = "Riesgo") +
tm_shape(curvas_nivel) +
tm_lines(col = "black", lwd = 0.3) +  # Curvas de nivel
tm_shape(grosor) +
tm_lines(col = "blue", lwd = "width", scale = 5) +
tm_layout(legend.position = c("right", "top"))
curvas_nivel <- terra::as.contour(
dem_amm,
levels = seq(0, 3000, by = 300)
) |>
st_as_sf()
curvas_nivel <- terra::as.contour(
dem_amm,
levels = seq(0, 3000, by = 300)
) |>
st_as_sf()
# Mapa base con relieve suavizado
tm_shape(riesgo_combinado) +
tm_raster(palette = "YlOrBr", alpha = 0.7, title = "Riesgo") +
tm_shape(curvas_nivel) +
tm_lines(col = "black", lwd = 0.3) +  # Curvas de nivel
tm_shape(grosor) +
tm_lines(col = "blue", lwd = "ORD_FLOW", scale = 5) +
tm_layout(legend.position = c("right", "top"))
# Mapa base con relieve suavizado
tm_shape(riesgo_combinado) +
tm_raster(palette = "YlOrBr", alpha = 0.7, title = "Riesgo") +
tm_shape(curvas_nivel) +
tm_lines(col = "black", lwd = 0.3) +  # Curvas de nivel
tm_shape(grosor) +
tm_lines(col = "blue", lwd = "ORD_FLOW", scale = 2) +
tm_layout(legend.position = c("right", "top"))
curvas_nivel <- terra::as.contour(
dem_amm,
levels = seq(0, 3000, by = 500)
) |>
st_as_sf()
# Mapa base con relieve suavizado
tm_shape(riesgo_combinado) +
tm_raster(palette = "YlOrBr", alpha = 0.7, title = "Riesgo") +
tm_shape(curvas_nivel) +
tm_lines(col = "black", lwd = 0.3) +  # Curvas de nivel
tm_shape(grosor) +
tm_lines(col = "blue", lwd = "ORD_FLOW", scale = 2) +
tm_layout(legend.position = c("right", "top"))
#CREAR MAPA
tm_shape(riesgo_combinado) +
tm_raster(palette = "YlOrBr", alpha = 0.7, title = "Riesgo") +
tm_shape(curvas_nivel) +
tm_lines(col = "black", lwd = 0.3) +  # Curvas de nivel
tm_shape(grosor) +
tm_lines(col = "lightblue", lwd = "ORD_FLOW", scale = 2) +
tm_layout(legend.position = c("right", "top"))
#PAQUETERIAS
pacman::p_load(
terra,
elevatr,
sf,
geodata,
tidyverse,
rayshader,
osmdata,
tmap,
purrr)
#FUNCION PARA CREAR MAPAS POR CADA MUNICIPIO
mapear_municipio <- function(nombre_municipio) {
mensaje <- paste("Generando mapa para:", nombre_municipio)
message(mensaje)
municipio_sf <- area_metropolitana_sf |>
filter(NAME_2 == nombre_municipio)
# Recalcular bbox específico del municipio
bbox_municipio <- sf::st_bbox(municipio_sf)
# Obtener DEM del municipio
dem_municipio <- elevatr::get_elev_raster(
locations = municipio_sf,
z = 9, clip = "locations") |>
terra::rast() |>
terra::project(crs_amm)
# Calcular pendiente, dirección de flujo, etc.
slope <- terra::terrain(dem_municipio, v = "slope", unit = "degrees")
flowdir <- terra::terrain(dem_municipio, v = "flowdir")
accum <- terra::flowAccumulation(flowdir)
accum_norm <- (accum - minmax(accum)[1]) / (minmax(accum)[2] - minmax(accum)[1])
# Filtrar cuencas
cuencas_mun <- cuencas |>
st_intersection(municipio_sf) |>
dplyr::mutate(width = dplyr::case_when(
ORD_FLOW == 5 ~ 16,
ORD_FLOW == 6 ~ 14,
ORD_FLOW == 7 ~ 12,
ORD_FLOW == 8 ~ 10,
ORD_FLOW == 9 ~ 6,
TRUE ~ 0)) |>
st_transform(crs = crs_amm)
cuencas_ras <- terra::rasterize(
vect(cuencas_mun), dem_municipio,
field = "width", background = 0)
# Calcular riesgo
riesgo <- accum_norm * cuencas_ras
# Reemplazar 0 por NA
riesgo[riesgo == 0] <- NA
riesgo_norm <- riesgo / max(riesgo[], na.rm = TRUE)
curvas <- terra::as.contour(dem_municipio, levels = seq(0, 3000, by = 500)) |>
st_as_sf()
# Mapa
mapa <- tm_shape(riesgo_norm) +
tm_raster(palette = "YlOrBr", alpha = 0.7, title = "Riesgo") +
tm_shape(curvas) +
tm_lines(col = "black", lwd = 0.3) +
tm_shape(cuencas_mun) +
tm_lines(col = "lightblue", lwd = "width", scale = 2) +
tm_layout(title = nombre_municipio,
legend.position = c("right", "top"))
# Exportar PNG
tmap_save(
tm = mapa,
filename = paste0("mapa_riesgo_", gsub(" ", "_", nombre_municipio), ".png"),
width = 2000, height = 1500, dpi = 300)
}
#CORRER FUNCION
walk(municipios_metropolitanos, mapear_municipio)
#FUNCION PARA CREAR MAPAS POR CADA MUNICIPIO
mapear_municipio <- function(nombre_municipio) {
mensaje <- paste("Generando mapa para:", nombre_municipio)
message(mensaje)
municipio_sf <- area_metropolitana_sf |>
filter(NAME_2 == nombre_municipio)
# Recalcular bbox específico del municipio
bbox_municipio <- sf::st_bbox(municipio_sf)
# Obtener DEM del municipio
dem_municipio <- elevatr::get_elev_raster(
locations = municipio_sf,
z = 9, clip = "locations") |>
terra::rast() |>
terra::project(crs_amm)
# Calcular pendiente, dirección de flujo, etc.
slope <- terra::terrain(dem_municipio, v = "slope", unit = "degrees")
flowdir <- terra::terrain(dem_municipio, v = "flowdir")
accum <- terra::flowAccumulation(flowdir)
accum_norm <- (accum - minmax(accum)[1]) / (minmax(accum)[2] - minmax(accum)[1])
# Filtrar cuencas
cuencas_mun <- cuencas |>
st_make_valid() |>
st_intersection(municipio_sf) |>
filter(!st_is_empty(.)) |>  # elimina geometrías vacías
mutate(width = case_when(
ORD_FLOW == 5 ~ 16,
ORD_FLOW == 6 ~ 14,
ORD_FLOW == 7 ~ 12,
ORD_FLOW == 8 ~ 10,
ORD_FLOW == 9 ~ 6,
TRUE ~ 0)) |>
st_transform(crs = crs_amm)
if (nrow(cuencas_mun) == 0) {
message("No hay cuencas en ", nombre_municipio, ". Mapa omitido.")
return(NULL)
}
cuencas_vect <- try(terra::vect(cuencas_mun), silent = TRUE)
if (inherits(cuencas_vect, "try-error")) {
message("No se pudo convertir cuencas a vect en ", nombre_municipio, ". Mapa omitido.")
return(NULL)
}
cuencas_ras <- terra::rasterize(
vect(cuencas_mun), dem_municipio,
field = "width", background = 0)
# Calcular riesgo
riesgo <- accum_norm * cuencas_ras
# Reemplazar 0 por NA
riesgo[riesgo == 0] <- NA
riesgo_norm <- riesgo / max(riesgo[], na.rm = TRUE)
curvas <- terra::as.contour(dem_municipio, levels = seq(0, 3000, by = 500)) |>
st_as_sf()
# Mapa
mapa <- tm_shape(riesgo_norm) +
tm_raster(palette = "YlOrBr", alpha = 0.7, title = "Riesgo") +
tm_shape(curvas) +
tm_lines(col = "black", lwd = 0.3) +
tm_shape(cuencas_mun) +
tm_lines(col = "lightblue", lwd = "width", scale = 2) +
tm_layout(title = nombre_municipio,
legend.position = c("right", "top"))
# Exportar PNG
tmap_save(
tm = mapa,
filename = paste0("mapa_riesgo_", gsub(" ", "_", nombre_municipio), ".png"),
width = 2000, height = 1500, dpi = 300)
}
#CORRER FUNCION
walk(municipios_metropolitanos, mapear_municipio)
riesgo_combinado
#VISUALIZACION 2D
#NORMALIZAR EL RIESGO COMBINADO
riesgo_combinado[riesgo_combinado==0]<-NA
riesgo_combinado
riesgo_raster <- riesgo_combinado / max(riesgo_combinado[], na.rm = TRUE)
curvas_nivel <- terra::as.contour(
dem_amm,
levels = seq(0, 3000, by = 500)
) |>
st_as_sf()
#CREAR MAPA
tm_shape(riesgo_raster) +
tm_raster(palette = "YlOrBr", alpha = 0.7, title = "Riesgo") +
tm_shape(curvas_nivel) +
tm_lines(col = "black", lwd = 0.3) +  # Curvas de nivel
tm_shape(grosor) +
tm_lines(col = "lightblue", lwd = "ORD_FLOW", scale = 2) +
tm_layout(legend.position = c("right", "top"))
#CREAR MAPA
tm_shape(riesgo_raster) +
tm_raster(palette = "YlOrBr", alpha = 1, title = "Riesgo") +
tm_shape(curvas_nivel) +
tm_lines(col = "black", lwd = 0.3) +  # Curvas de nivel
tm_shape(grosor) +
tm_lines(col = "lightblue", lwd = "ORD_FLOW", scale = 2) +
tm_layout(legend.position = c("right", "top"))
#CREAR MAPA
tm_shape(riesgo_raster) +
tm_raster(palette = "-RdYlGn", alpha = 1, title = "Riesgo") +
tm_shape(curvas_nivel) +
tm_lines(col = "black", lwd = 0.3) +  # Curvas de nivel
tm_shape(grosor) +
tm_lines(col = "lightblue", lwd = "ORD_FLOW", scale = 2) +
tm_layout(legend.position = c("right", "top"))
#CREAR MAPA
tm_shape(riesgo_raster) +
tm_raster(palette = "-RdYlGn", alpha = 1, title = "Riesgo") +
tm_shape(curvas_nivel) +
tm_lines(col = "black", lwd = 0.3) +  # Curvas de nivel
tm_shape(grosor) +
tm_lines(col = "lightblue", lwd = "ORD_FLOW", scale = 2, title="cuencas") +
tm_layout(legend.position = c("right", "top"))
#CREAR MAPA
tm_shape(riesgo_raster) +
tm_raster(palette = "-RdYlGn", alpha = 1, title = "Riesgo") +
tm_shape(curvas_nivel) +
tm_lines(col = "black", lwd = 0.3) +  # Curvas de nivel
tm_shape(grosor) +
tm_lines(col = "lightblue", lwd = "ORD_FLOW", scale = 2, label="cuencas") +
tm_layout(legend.position = c("right", "top"))
#CREAR MAPA
tm_shape(riesgo_raster) +
tm_raster(palette = "-RdYlGn", alpha = 1, title = "Riesgo") +
tm_shape(curvas_nivel) +
tm_lines(col = "black", lwd = 0.3) +  # Curvas de nivel
tm_shape(grosor) +
tm_lines(col = "lightblue", lwd = "ORD_FLOW", scale = 2) +
tm_layout(legend.position = c("right", "top"))
